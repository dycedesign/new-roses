#!/usr/bin/env bash
#
# author: daniel neemann (@zzzeyez)
#
# imports wallpapers from unsplash.com
#
# requires `imagemagick` and `jq`

wallpaper="/tmp/wallpaper.png"
unsplashartistfile="/tmp/wallpaperartist"
keyword="roses"
unsplashapi="eab5f4fd51b7c4a671a90fb716b540757d9589e493570f83fc8584174bef43bf"
dummy="/tmp/dummy.png"

getapi() {
	# grab a random number to select from top results
	entry="$((RANDOM%20))"
	unsplashurl="https://api.unsplash.com/search/photos?client_id=$unsplashapi&query=$keyword&per_page=20"
	searchjson=$(curl -s "$unsplashurl")
	image="$(echo "$searchjson" | \
		jq "{results} | .[] | .[$entry] | {urls} | .[] | {raw} | .[]" | tr -d '"')&w=1400&dpi=2"
	username="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .name" | tr -d '"')"
	userscreenname="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .username" | tr -d '"')"
	userurl="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .links .html" | tr -d '"')"
	photourl="$(echo "$searchjson" | \
		jq ".results | .[$entry] .links .html" | tr -d '"')"
	echo "$username" > "$unsplashartistfile"
}

macwallpaper() {
	METHOD=$(sw_vers -productVersion | awk -F'.' '{ if ($1 < 10 || $2 < 9) \
	{ print "osascript" } else{ print "sqlite3"  } }')
	case $METHOD in
	osascript)
		osascript -e "tell application \"Finder\" to set desktop picture \
		to POSIX file \"${1}\""
	;;
	sqlite3)
		current_path=$(sqlite3 -noheader -batch \
		${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
		'select value from data limit 1')
		if [[ "$current_path" != "$1" ]]; then
		sqlite3 ${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
		"update data set value = '${1}'" && killall Dock
	fi
	;;
	*)
		echo "error setting wallpaper" && exit 1
	;;
	esac						
}

setwallpaper() {
	convert "$image" "$wallpaper"
	de="${XDG_CURRENT_DESKTOP}"
	os="$(uname)"
	# Fallback to using xprop.
	[[ -z "$de" ]] && type -p xprop >/dev/null 2>&1 && \
		de="$(xprop -root | awk '/KDE_SESSION_VERSION|^_MUFFIN|xfce4|xfce5/')"
		case "$de" in
		*"MUFFIN"* | *"Cinnamon"*) gsettings set org.cinnamon.desktop.background picture-uri "file://${wallpaper}" ;;
		*"MATE"*) gsettings set org.mate.background picture-filename "$wallpaper" ;;
		*"GNOME"*) gsettings set org.gnome.desktop.background picture-uri "file://${wallpaper}" ;;
		*"XFCE"*)
			xfconf-query --channel xfce4-desktop --property /backdrop/screen0/monitor0/image-path --set "$wallpaper" 2>/dev/null
			xfconf-query --channel xfce4-desktop --property /backdrop/screen0/monitor0/workspace0/last-image --set "$wallpaper" 2>/dev/null
		;;
		*)
			if [[ "$os" == "Darwin" ]]; then
				# `osascript` prevents using same file consecutively
				if [[ ! -e "$dummy" ]] ; then
					convert -size 5x5 xc:"#000000" "$dummy" 
				fi
				macwallpaper "$dummy"
				macwallpaper "$wallpaper"
			elif type -p feh >/dev/null; then
				feh --bg-fill "$wallpaper"
			elif type -p nitrogen >/dev/null; then
				nitrogen --set-zoom-fill "$wallpaper"
			elif type -p bgs >/dev/null; then
				bgs "$wallpaper"
			elif type -p hsetroot >/dev/null; then
				hsetroot -fill "$wallpaper"
			elif type -p habak >/dev/null; then
				habak -mS "$wallpaper"
			else
				gsettings set org.gnome.desktop.background picture-uri "file://${wallpaper}"
			fi
			;;
		esac
	if [[ "$notifyon" ]] ; then
		notify-send "photo by $username via Unsplash.com"
	fi
}

save() {
	savedir="$1"
	savename="$(cat $unsplashartistfile)"
	echo "${savename// /}"
	savefile="$savedir/"${savename// /}""
	if [[ -e $savefile.png ]] ; then
	    i=2
	    while [[ -e $savefile$i.png ]] 
		do
	        (( i++ ))
	    done
	    savefile=$savefile$i
	fi
	cp "$wallpaper" "$savefile.png" &&
	echo "$savefile.png saved" &
	if [[ "$notifyon" ]]
	then
		notify-send -m "$savefile.png saved" -i "$savefile.png"	
	fi
}

flags() {
	while getopts s:qnh opt; do
		case $opt in
			s)
			save "$OPTARG"
			exit
			;;
			q)
			quietmodeon="true"
			;;
			n)
			notifyon="true"
			;;
			h)
			help
			exit
			;;
			*)
			help
			exit
			;;
		esac
	done
	# if no flags are provided do `new-roses [searchterm] [bgcolor]`
	shift "$((OPTIND-1))" 
	if [ "$1" != "-*" ] && [ "$1" ] ;
	then
		keyword="$1"
	fi
}

if [ "$#" -ne 0 ]; then
	flags "$@"
	getapi
	setwallpaper
else
	getapi
	setwallpaper
fi

################
#    TO DO     #
################

# defaultbgcolor breaks -l

# stop using `wallpaper` to set wallpaper
# (pretty much finished, just need to unset $wallpapermethod if empty
# and make macos change more than one workspace

# possibly move unsplash functionality to own program

# grab actual hex codes and create .json file like:
#echo '{"foo": "lorem", "special": {"background": "#333333"}, "bar": "ipsum"}' | jq . > /tmp/jqtest
